#!/usr/bin/env python3
# -*- coding: utf-8 -*-

class Node:
    def __init__(self,value):
        self.info = value
        self.link = None

class Stack:
    def __init__(self):
        self.top = None

    def is_empty(self):
        return self.top == None

    def size(self):
        if self.is_empty():
            return 0

        p = self.top
        counter = 0
        while p is not None:
            p = p.link
            counter+=1
        return counter

    def push(self,data):
        temp = Node(data)
        temp.link = self.top
        self.top = temp

    def pop(self):
        if self.is_empty():
            print('Stack is empty')
            return
        self.top = self.top.link

    def peek(self):
        if self.is_empty():
            print('Stack is empty')
            return
        print(self.top.info)

    def display(self):
        if self.is_empty():
            print('Stack is empty')
            return
        p = self.top
        print('Stack is:')
        while p is not None:
            print(p.info,'',end='')
            p = p.link
        print()

##############################
class Queue:
    def __init__(self):
        self.front = None
        self.rear = None
        self.size_queue = 0

    def is_empty(self):
        return self.front ==None

    def size(self):
        return self.size_queue

    def enqueue(self,data):
        temp = Node(data)
        if self.front ==None:
            self.front = temp
        else:
            self.rear.link = temp
        self.rear = temp
        self.size_queue+=1

    def dequeue(self):
        if self.is_empty():
            print('Queue is empty')
            return
        else:
            self.front=self.front.link
            self.size_queue-=1
            return

    def display(self):
        if self.is_empty():
            print('Queue is empty')
            return
        else:
            print('Queue is')
            p = self.front
            while p is not None:
                print(p.info,' ',end='')
                p = p.link
            print()

#######################

choice = int(input('choose 1 for stack, 2 for queue'))
if choice != 1 or choice !=2:
    print('Restart and choose a valid number')
elif choice ==1:
    a = Stack()
    while True:
        print('1.Push')
        print('2.Pop')
        print('3.Peek')
        print('4.Size')
        print('5.Display')
        print('6.Quit')
        choice = int(input("select your choice"))
        if choice==1:
            x = int(input('Push what number?'))
            a.push(x)
        elif choice ==2:
            x=a.pop()
        elif choice==3:
            a.peek()
        elif choice ==4:
            a.size()
        elif choice ==5:
            a.display()
        else:
            break
else:
        b = Queue()
        while True:
            print('1.Enqueue')
            print('2.Dequeue')
            print('3.Size')
            print('4.Display')
            print('5.Quit')
            choice = int(input("select your choice"))
            if choice == 1:
                x = int(input('Add what number'))
                b.enqueue(x)
            elif choice == 2:
                b.dequeue()
            elif choice == 3:
                print(b.size_queue)
            elif choice == 4:
                b.display()
            elif choice == 5:
                break
            else:
                break

